services:
  db:
    # networks:
    #   - vrun_network
    image: database:latest
    build:
      context: ./postgres
      args:
        - CRON_DB=${POSTGRES_DB}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    profiles: [core,backend]

  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    restart: always
    # networks:
    #   - vrun_network
    depends_on:
      - db
      - minio
    env_file:
      - .env
    volumes:
      - ./credentials:/credentials
    environment:
      - DOMAIN=${DOMAIN}
      - FRONTEND_HOST=${FRONTEND_HOST?Variable not set}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - SENTRY_DSN=${SENTRY_DSN}
    ports:
      - 8000:8000

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/utils/health-check/"]
      interval: 10s
      timeout: 5s
      retries: 5

    build:
      context: ./backend
    profiles: [backend]

  minio:
    # networks:
    #   - vrun_network
    image: quay.io/minio/minio
    restart: always
    command: server /data --console-address ":9001"
    env_file:
    - .env
    environment:
      - MINIO_ACCESS_KEY=${MINIO_KEY?Variable not set}
      - MINIO_SECRET_KEY=${MINIO_SECRET?Variable not set}
    ports:
      # - 9000:9000
      - 9001:9001
    healthcheck:
      test: curl -f http://localhost:9001
    profiles: [core,backend]
volumes:
  app-db-data:


# networks:
#   vrun_network:
#     driver: bridge
